name: Build & Dockerize Backend

on:
  repository_dispatch:
    types: [ frontend-build-released ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Download frontend release asset
        run: |
          mkdir -p src/main/resources/static
          gh release download --repo nallayasami/scrum-planner-angular-fe --pattern "*" -D src/main/resources/static 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: mvn clean package -DskipTests
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/scrum-planner-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/scrum-planner-backend:latest

  test-deployment:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - run: docker compose up -d
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}

      - name: Wait for the app to start
        run: |
          echo "Waiting for app to become healthy..."
          sleep 20
          curl --retry 5 --retry-delay 5 --fail http://localhost:8080/status/health || exit 1

      - name: Dump container logs
        if: failure()
        run: |
          docker compose logs app
          docker compose logs postgres
          
        
